Git-commit: 5663983db79bada224c3efd00c20259deca5dc6a
From: Zengruan Ye <yezengruan@huawei.com>
Date: Tue, 2 Feb 2021 17:44:52 +0800
Subject: [PATCH] KVM: arm64: Add SMCCC PV-sched to kick cpu
Patch-mainline: Queued in openEuler repo, version 5.10.0-4.1.0
References: openEuler-21.03
Git-repo: https://gitee.com/openeuler/kernel.git

virt inclusion
category: feature
bugzilla: 47624
CVE: NA

--------------------------------

A new hypercall interface function is provided for the guest to kick WFI
state vCPU.

Signed-off-by: Zengruan Ye <yezengruan@huawei.com>
Reviewed-by: Zhanghailiang <zhang.zhanghailiang@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Kai Liu <kai.liu@suse.com>
---
 Documentation/virt/kvm/arm/pvsched.rst | 16 ++++++++++++++++
 include/linux/arm-smccc.h              |  6 ++++++
 2 files changed, 22 insertions(+)

diff --git a/Documentation/virt/kvm/arm/pvsched.rst b/Documentation/virt/kvm/arm/pvsched.rst
index 8f7112a8a9cd..6ba221e25089 100644
--- a/Documentation/virt/kvm/arm/pvsched.rst
+++ b/Documentation/virt/kvm/arm/pvsched.rst
@@ -11,6 +11,7 @@ Some SMCCC compatible hypercalls are defined:
 * PV_SCHED_FEATURES:          0xC5000090
 * PV_SCHED_IPA_INIT:          0xC5000091
 * PV_SCHED_IPA_RELEASE:       0xC5000092
+* PV_SCHED_KICK_CPU:          0xC5000093
 
 The existence of the PV_SCHED hypercall should be probed using the SMCCC 1.1
 ARCH_FEATURES mechanism before calling it.
@@ -38,6 +39,13 @@ PV_SCHED_IPA_RELEASE
                               this vCPU's PV data structure is released.
     ============= ========    ==========
 
+PV_SCHED_KICK_CPU
+    ============= ========    ==========
+    Function ID:  (uint32)    0xC5000093
+    Return value: (int64)     NOT_SUPPORTED (-1) or SUCCESS (0) if the vCPU is
+                              kicked by the hypervisor.
+    ============= ========    ==========
+
 PV sched state
 --------------
 
@@ -56,3 +64,11 @@ The structure pointed to by the PV_SCHED_IPA hypercall is as follows:
 The preempted field will be updated to 0 by the hypervisor prior to scheduling
 a vCPU. When the vCPU is scheduled out, the preempted field will be updated
 to 1 by the hypervisor.
+
+A vCPU of a paravirtualized guest that is busywaiting in guest kernel mode for
+an event to occur (ex: a spinlock to become available) can execute WFI
+instruction once it has busy-waited for more than a threshold time-interval.
+Execution of WFI instruction would cause the hypervisor to put the vCPU to sleep
+until occurrence of an appropriate event. Another vCPU of the same guest can
+wakeup the sleeping vCPU by issuing PV_SCHED_KICK_CPU hypercall, specifying CPU
+id (reg1) of the vCPU to be woken up.
diff --git a/include/linux/arm-smccc.h b/include/linux/arm-smccc.h
index 16c776d8ee8d..42c73106acb1 100644
--- a/include/linux/arm-smccc.h
+++ b/include/linux/arm-smccc.h
@@ -410,5 +410,11 @@ asmlinkage void __arm_smccc_hvc(unsigned long a0, unsigned long a1,
 			   ARM_SMCCC_OWNER_STANDARD_HYP,		\
 			   0x92)
 
+#define ARM_SMCCC_HV_PV_SCHED_KICK_CPU					\
+	ARM_SMCCC_CALL_VAL(ARM_SMCCC_FAST_CALL,				\
+			   ARM_SMCCC_SMC_64,				\
+			   ARM_SMCCC_OWNER_STANDARD_HYP,		\
+			   0x93)
+
 #endif /*__ASSEMBLY__*/
 #endif /*__LINUX_ARM_SMCCC_H*/
-- 
2.31.1

