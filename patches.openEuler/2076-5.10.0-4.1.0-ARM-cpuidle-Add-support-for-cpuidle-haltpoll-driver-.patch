Git-commit: 32e3b9ecf89e15db3cd9da3420398c381a48dba7
From: Xiangyou Xie <xiexiangyou@huawei.com>
Date: Fri, 19 Feb 2021 15:14:34 +0800
Subject: [PATCH] ARM: cpuidle: Add support for cpuidle-haltpoll driver for ARM
Patch-mainline: Queued in openEuler repo, version 5.10.0-4.1.0
References: openEuler-21.03
Git-repo: https://gitee.com/openeuler/kernel.git

hulk inclusion
category: feature
bugzilla: 47727
CVE: NA

------------------------------

Add support for cpuidle-haltpoll driver for ARM.
Allow arm to use the couidle-haltpoll driver.

Signed-off-by: Xiangyou Xie <xiexiangyou@huawei.com>
Signed-off-by: Peng Liang <liangpeng10@huawei.com>
Reviewed-by: Hanjun Guo <guohanjun@huawei.com>
Signed-off-by: Zheng Zengkai <zhengzengkai@huawei.com>
Signed-off-by: Kai Liu <kai.liu@suse.com>
---
 arch/arm64/Kconfig                   | 3 +++
 arch/arm64/kernel/process.c          | 4 ++++
 drivers/cpuidle/Kconfig              | 4 ++--
 drivers/cpuidle/cpuidle-haltpoll.c   | 4 ++--
 drivers/cpuidle/governors/haltpoll.c | 6 +++++-
 drivers/cpuidle/poll_state.c         | 3 +++
 6 files changed, 19 insertions(+), 5 deletions(-)

diff --git a/arch/arm64/Kconfig b/arch/arm64/Kconfig
index 0363fb21ced1..a20e81177d1b 100644
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@ -345,6 +345,9 @@ config KASAN_SHADOW_OFFSET
 	default 0xeffffff900000000 if ARM64_VA_BITS_36 && KASAN_SW_TAGS
 	default 0xffffffffffffffff
 
+config ARCH_HAS_CPU_RELAX
+	def_bool y
+
 source "arch/arm64/Kconfig.platforms"
 
 menu "Kernel Features"
diff --git a/arch/arm64/kernel/process.c b/arch/arm64/kernel/process.c
index 73e3b324c51e..7fa97c7004a8 100644
--- a/arch/arm64/kernel/process.c
+++ b/arch/arm64/kernel/process.c
@@ -128,6 +128,10 @@ void noinstr arch_cpu_idle(void)
 	raw_local_irq_enable();
 }
 
+#if defined(CONFIG_HALTPOLL_CPUIDLE_MODULE)
+EXPORT_SYMBOL(arch_cpu_idle);
+#endif
+
 #ifdef CONFIG_HOTPLUG_CPU
 void arch_cpu_idle_dead(void)
 {
diff --git a/drivers/cpuidle/Kconfig b/drivers/cpuidle/Kconfig
index c0aeedd66f02..7b6ba7fa574a 100644
--- a/drivers/cpuidle/Kconfig
+++ b/drivers/cpuidle/Kconfig
@@ -35,7 +35,7 @@ config CPU_IDLE_GOV_TEO
 
 config CPU_IDLE_GOV_HALTPOLL
 	bool "Haltpoll governor (for virtualized systems)"
-	depends on KVM_GUEST
+	depends on KVM_GUEST || ARM64
 	help
 	  This governor implements haltpoll idle state selection, to be
 	  used in conjunction with the haltpoll cpuidle driver, allowing
@@ -64,7 +64,7 @@ endmenu
 
 config HALTPOLL_CPUIDLE
 	tristate "Halt poll cpuidle driver"
-	depends on X86 && KVM_GUEST
+	depends on (X86 && KVM_GUEST) || ARM64
 	default y
 	help
 	 This option enables halt poll cpuidle driver, which allows to poll
diff --git a/drivers/cpuidle/cpuidle-haltpoll.c b/drivers/cpuidle/cpuidle-haltpoll.c
index f47612852582..e22f7867609b 100644
--- a/drivers/cpuidle/cpuidle-haltpoll.c
+++ b/drivers/cpuidle/cpuidle-haltpoll.c
@@ -96,7 +96,7 @@ static void haltpoll_uninit(void)
 
 static bool haltpoll_want(void)
 {
-	return kvm_para_has_hint(KVM_HINTS_REALTIME) || force;
+	return kvm_para_has_hint(KVM_HINTS_REALTIME);
 }
 
 static int __init haltpoll_init(void)
@@ -112,7 +112,7 @@ static int __init haltpoll_init(void)
 
 	cpuidle_poll_state_init(drv);
 
-	if (!kvm_para_available() || !haltpoll_want())
+	if (!force && (!kvm_para_available() || !haltpoll_want()))
 		return -ENODEV;
 
 	ret = cpuidle_register_driver(drv);
diff --git a/drivers/cpuidle/governors/haltpoll.c b/drivers/cpuidle/governors/haltpoll.c
index cb2a96eafc02..4e814683509e 100644
--- a/drivers/cpuidle/governors/haltpoll.c
+++ b/drivers/cpuidle/governors/haltpoll.c
@@ -39,6 +39,10 @@ module_param(guest_halt_poll_grow_start, uint, 0644);
 static bool guest_halt_poll_allow_shrink __read_mostly = true;
 module_param(guest_halt_poll_allow_shrink, bool, 0644);
 
+static bool enable __read_mostly;
+module_param(enable, bool, 0444);
+MODULE_PARM_DESC(enable, "Load unconditionally");
+
 /**
  * haltpoll_select - selects the next idle state to enter
  * @drv: cpuidle driver containing state data
@@ -140,7 +144,7 @@ static struct cpuidle_governor haltpoll_governor = {
 
 static int __init init_haltpoll(void)
 {
-	if (kvm_para_available())
+	if (kvm_para_available() || enable)
 		return cpuidle_register_governor(&haltpoll_governor);
 
 	return 0;
diff --git a/drivers/cpuidle/poll_state.c b/drivers/cpuidle/poll_state.c
index f7e83613ae94..a0dea6323771 100644
--- a/drivers/cpuidle/poll_state.c
+++ b/drivers/cpuidle/poll_state.c
@@ -7,6 +7,9 @@
 #include <linux/sched.h>
 #include <linux/sched/clock.h>
 #include <linux/sched/idle.h>
+#ifdef CONFIG_ARM64
+#include <linux/cpu.h>
+#endif
 
 #define POLL_IDLE_RELAX_COUNT	200
 
-- 
2.31.1

